version: '3.4'

services:
  crawler.api:
    image: ${DOCKER_REGISTRY-}crawlerapi
    container_name: crawler-api
    build:
      context: .
      dockerfile: Crawler.API/Dockerfile
    ports:
      - "9515:9515"  # Map container port to host port
    depends_on:
      - rabbitmq
    networks:
      - data-network
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - data-network
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    #environment:
    #  - RABBITMQ_DEFAULT_USER=guest
    #  - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - data-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - data-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - data-network


  crawler.web:
    image: ${DOCKER_REGISTRY-}crawlerweb
    container_name: crawler-web
    ports:
      - "8080:9515"  # Map container port to host port
    build:
      context: .
      dockerfile: Crawler.Web/Dockerfile

networks:
  data-network:  
    driver: bridge
